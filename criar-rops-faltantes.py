#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Cria se√ß√µes ROPs 4.1-6.5 no rops-data.js
"""

import re

# Dados das ROPs faltantes
rops_to_create = {
    'vida-profissional': {
        '4-1': 'ROP 4.1 ‚Äì Programa de Manuten√ß√£o Preventiva',
        '4-2': 'ROP 4.2 ‚Äì Seguran√ßa do Paciente: Capacita√ß√£o e Treinamento',
        '4-3': 'ROP 4.3 ‚Äì Preven√ß√£o de Viol√™ncia no Local de Trabalho',
        '4-4': 'ROP 4.4 ‚Äì Fluxo de Clientes',
        '4-5': 'ROP 4.5 ‚Äì Plano de Seguran√ßa do Paciente',
    },
    'prevencao-infeccoes': {
        '5-1': 'ROP 5.1 ‚Äì Ader√™ncia √†s Pr√°ticas de Higiene das M√£os',
        '5-2': 'ROP 5.2 ‚Äì Higiene das M√£os: Capacita√ß√£o e Treinamento',
        '5-3': 'ROP 5.3 ‚Äì Taxas de Infec√ß√£o',
        '5-4': 'ROP 5.4 ‚Äì Reprocessamento',
    },
    'avaliacao-riscos': {
        '6-1': 'ROP 6.1 ‚Äì Preven√ß√£o de Quedas e Redu√ß√£o de Les√µes (Interna√ß√£o)',
        '6-2': 'ROP 6.2 ‚Äì Preven√ß√£o de √ölceras por Press√£o',
        '6-3': 'ROP 6.3 ‚Äì Preven√ß√£o de Suic√≠dio',
        '6-4': 'ROP 6.4 ‚Äì Profilaxia para Tromboembolia Venosa (TEV)',
        '6-5': 'ROP 6.5 ‚Äì Tratamento da Pele e Feridas',
    }
}

print("üîÑ CRIANDO SE√á√ïES ROPs 4.1-6.5\n")
print("=" * 70)

# Ler rops-data.js
with open('rops-data.js', 'r', encoding='utf-8') as f:
    rops_data = f.read()

total_created = 0

for macro_key, rops in rops_to_create.items():
    print(f"\nüìÅ Macro √°rea: {macro_key}")
    
    # Encontrar a macro √°rea
    pattern = rf'"{macro_key}":\s*\{{\s*title:.*?subdivisoes:\s*\{{(.*?)\s*\}}\s*\}}'
    match = re.search(pattern, rops_data, re.DOTALL)
    
    if not match:
        print(f"   ‚ùå Macro √°rea {macro_key} n√£o encontrada!")
        continue
    
    subdivisoes_content = match.group(1)
    
    # Criar novas subdivis√µes
    new_subdivisoes = []
    
    for rop_key, rop_title in rops.items():
        print(f"   ‚úÖ Criando ROP {rop_key}")
        
        rop_section = f'''
            "rop-{rop_key}": {{
                title: "{rop_title}",
                audioFile: null,
                questions: []
            }},'''
        
        new_subdivisoes.append(rop_section)
        total_created += 1
    
    # Inserir no final das subdivis√µes existentes
    full_match = match.group(0)
    insertion_point = subdivisoes_content.rstrip()
    
    # Adicionar v√≠rgula no √∫ltimo item se necess√°rio
    if insertion_point and not insertion_point.rstrip().endswith(','):
        insertion_point += ','
    
    new_full = full_match.replace(
        subdivisoes_content,
        insertion_point + ''.join(new_subdivisoes) + '\n        '
    )
    
    rops_data = rops_data.replace(full_match, new_full)

# Salvar
with open('rops-data.js', 'w', encoding='utf-8') as f:
    f.write(rops_data)

print("\n" + "=" * 70)
print(f"‚úÖ CRIA√á√ÉO CONCLU√çDA!")
print(f"üéØ Total: {total_created} ROPs criadas")
print("=" * 70)

